# This is the configuration file for Sweep AI, a tool that automatically turns bugs and feature requests into code changes.
# For more details on how to configure this file, refer to our documentation at https://docs.sweep.dev/usage/config

# This setting contains a list of rules that Sweep will check for. If any of these rules are broken in a new commit, Sweep will create an pull request to fix the broken rule.
rules:
  - "All docstrings and comments should be up to date."
['All new business logic should have corresponding unit tests.', 'Refactor large functions to be more modular.', 'Add docstrings to all functions and file headers.']

# This is the branch that Sweep will develop from and make pull requests to. Most people use 'main' or 'master' but some users also use 'dev' or 'staging'.
branch: 'main'

# By default Sweep will read the logs and outputs from your existing Github Actions. To disable this, set this to false.
gha_enabled: True

# This is the description of your project. It will be used by sweep when creating PRs. You can tell Sweep what's unique about your project, what frameworks you use, or anything else you want.
#
# The 'rules' section lists the coding rules that Sweep will enforce. If a new commit violates any of these rules, Sweep will automatically create a pull request to fix the violation.
# The 'branch' setting specifies the branch that Sweep will use for development and pull requests. Common choices are 'main', 'master', 'dev', or 'staging'.
# The 'gha_enabled' setting controls whether Sweep will read logs and outputs from your existing Github Actions. If set to false, this feature is disabled.
# The 'rules' section lists the coding rules that Sweep will enforce. If a new commit violates any of these rules, Sweep will automatically create a pull request to fix the violation.
# The 'branch' setting specifies the branch that Sweep will use for development and pull requests. Common choices are 'main', 'master', 'dev', or 'staging'.
# The 'gha_enabled' setting controls whether Sweep will read logs and outputs from your existing Github Actions. If set to false, this feature is disabled.
# Example:
#
# description: sweepai/sweep is a python project. The main api endpoints are in sweepai/api.py. Write code that adheres to PEP8.
description: ''

# This sets whether to create pull requests as drafts. If this is set to True, then all pull requests will be created as drafts and GitHub Actions will not be triggered.
draft: False

# This is a list of directories that Sweep will not be able to edit.
blocked_dirs: []

# This is a list of documentation links that Sweep will use to help it understand your code. You can add links to documentation for any packages you use here.
#
# Example:
#
# The 'draft' setting controls whether Sweep creates pull requests as drafts. If set to true, all pull requests will be created as drafts and GitHub Actions will not be triggered.
# The 'blocked_dirs' setting is a list of directories that Sweep is not allowed to edit.
# The 'docs' setting is a list of documentation links that Sweep can use to better understand your code. You can add links to documentation for any packages you use here.
# The 'description' setting is where you can provide a brief description of your project. This information will be used by Sweep when creating pull requests. You can include details about your project's unique features, the frameworks you use, and any other relevant information.
# The 'draft' setting controls whether Sweep creates pull requests as drafts. If set to true, all pull requests will be created as drafts and GitHub Actions will not be triggered.
# The 'blocked_dirs' setting is a list of directories that Sweep is not allowed to edit.
# The 'docs' setting is a list of documentation links that Sweep can use to better understand your code. You can add links to documentation for any packages you use here.
# docs:
#   - PyGitHub: ["https://pygithub.readthedocs.io/en/latest/", "We use pygithub to interact with the GitHub API"]
docs: []

# The 'sandbox' section contains commands that Sweep executes in a sandboxed environment to validate code changes after every edit, ensuring the integrity of the code. For more details, see the [Sandbox](./sandbox) page.
sandbox:
  install:
    - trunk init
  check:
    - trunk fmt {file_path} || return 0
    - trunk check --fix --print-failures {file_path}
